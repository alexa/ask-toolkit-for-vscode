{
  "name": "alexa-skills-kit-toolkit",
  "displayName": "Alexa Skills Kit (ASK) Toolkit",
  "description": "Build and manage Alexa skills using Visual Studio Code",
  "version": "2.14.1",
  "publisher": "ask-toolkit",
  "engines": {
    "vscode": "^1.53.0"
  },
  "author": "ask-dev-exp-tools team",
  "homepage": "https://github.com/alexa/ask-toolkit-for-vscode",
  "categories": [
    "Debuggers",
    "Snippets",
    "Visualization",
    "Other",
    "Programming Languages"
  ],
  "keywords": [
    "Alexa",
    "Alexa-Hosted skills",
    "ASK Toolkit",
    "JSON",
    "Python",
    "APL",
    "Local Debug",
    "Alexa skills"
  ],
  "license": "SEE LICENSE IN LICENSE",
  "bugs": {
    "url": "https://github.com/alexa/ask-toolkit-for-vscode/issues"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/alexa/ask-toolkit-for-vscode.git"
  },
  "icon": "media/images/ask_icon.png",
  "galleryBanner": {
    "color": "#232F3E",
    "theme": "dark"
  },
  "qna": "https://github.com/alexa/ask-toolkit-for-vscode/issues",
  "activationEvents": [
    "onDebugResolve:skillDebugger_nodejs",
    "onDebugResolve:skillDebugger_python",
    "onDebugInitialConfigurations",
    "onView:askContainer.skills-console",
    "onView:askContainer.help-view",
    "onWebviewPanel:welcomeScreen",
    "workspaceContains:**/ask-resources.json",
    "onUri"
  ],
  "main": "./extensionMain",
  "contributes": {
    "viewsContainers": {
      "activitybar": [
        {
          "id": "ask-toolkit",
          "title": "Alexa Skills Toolkit",
          "icon": "media/images/ask_icon.png"
        }
      ]
    },
    "views": {
      "ask-toolkit": [
        {
          "id": "askContainer.skill-actions",
          "name": "Skills",
          "when": "inSkillWorkspace"
        },
        {
          "id": "askContainer.skills-console",
          "name": "Skills Management"
        },
        {
          "id": "askContainer.help-view",
          "name": "Documentation"
        }
      ]
    },
    "menus": {
      "view/title": [
        {
          "command": "ask.init",
          "when": "view == askContainer.skills-console",
          "group": "1_modification"
        },
        {
          "command": "askContainer.skillsConsole.deviceRegistry",
          "when": "view == askContainer.skills-console",
          "group": "9_cutcopypaste@1"
        },
        {
          "command": "askContainer.skillsConsole.deviceDeletion",
          "when": "view == askContainer.skills-console",
          "group": "9_cutcopypaste@2"
        },
        {
          "command": "askContainer.skill-actions.refresh",
          "when": "view == askContainer.skill-actions",
          "group": "navigation"
        }
      ],
      "editor/title": [
        {
          "when": "resourceFilename == document.json",
          "command": "ask.apl.container.renderAplTemplate",
          "group": "navigation"
        },
        {
          "when": "resourceFilename == document.json",
          "command": "ask.apl.container.changeViewportProfile",
          "group": "1_diff"
        }
      ]
    },
    "commands": [
      {
        "command": "ask.init",
        "title": "Profile manager"
      },
      {
        "command": "askContainer.skillsConsole.deviceRegistry",
        "title": "Register device"
      },
      {
        "command": "askContainer.skillsConsole.deviceDeletion",
        "title": "Delete device"
      },
      {
        "command": "ask.aboutToolkit",
        "title": "Alexa: About Alexa Skill Toolkit"
      },
      {
        "command": "ask.showToolkitUpdates",
        "title": "Alexa: Show Toolkit Update Notes"
      },
      {
        "command": "ask.apl.container.renderAplTemplate",
        "title": "Alexa: Render APL Document",
        "icon": {
          "light": "third-party/resources/from-vscode-icons/light/open-preview.svg",
          "dark": "third-party/resources/from-vscode-icons/dark/open-preview.svg"
        }
      },
      {
        "command": "ask.apl.container.changeViewportProfile",
        "title": "Alexa: Change APL Viewport Profile"
      },
      {
        "command": "askContainer.skill-actions.refresh",
        "title": "Refresh skills",
        "icon": {
          "light": "third-party/resources/from-vscode-icons/light/refresh.svg",
          "dark": "third-party/resources/from-vscode-icons/dark/refresh.svg"
        }
      }
    ],
    "snippets": [
      {
        "language": "json",
        "path": "./snippets/aplSnippets.json"
      }
    ],
    "configuration": {
      "type": "object",
      "title": "Alexa Skills Kit",
      "properties": {
        "askToolkit.showWelcomeScreen": {
          "type": "boolean",
          "default": true,
          "description": "Show the welcome screen whenever the extension is loaded."
        },
        "askToolkit.logLevel": {
          "type": "string",
          "default": "info",
          "enum": [
            "error",
            "info",
            "debug",
            "verbose",
            "off"
          ],
          "enumDescriptions": [
            "Errors Only",
            "Errors, Warnings, and Info",
            "Errors, Warnings, Info, and Debug",
            "Verbose",
            "No logs"
          ],
          "markdownDescription": "Specifies log level for ASK extension output channel",
          "scope": "window"
        },
        "askToolkit.show Full ACDL Namespace": {
          "type": "boolean",
          "default": false,
          "description": "Show fully qualified namespaces in ACDL Language Features while editing .acdl files."
        },
        "ask.telemetryEnabled": {
          "type": "string",
          "default": "Enabled",
          "enum": [
            "Enabled",
            "Disabled",
            "Use IDE settings"
          ],
          "markdownDescription": "Enable the Alexa Skills extension to send usage data to Amazon",
          "scope": "window"
        }
      }
    },
    "debuggers": [
      {
        "type": "skillDebugger_nodejs",
        "label": "ASK: Alexa Skills Debugger (Node.js)",
        "program": "./dist/nodeDebug.js",
        "runtime": "node",
        "configurationSnippets": [
          {
            "label": "ASK: Alexa Skills Debugger (Node.js)",
            "description": "Debugger configuration for Alexa skills (Node.js)",
            "body": {
              "name": "Debug Alexa Skill (Node.js)",
              "type": "pwa-node",
              "request": "launch",
              "program": "^\"\\${command:ask.debugAdapterPath}\"",
              "args": [
                "--accessToken",
                "^\"\\${command:ask.accessToken}\"",
                "--skillId",
                "^\"\\${command:ask.skillIdFromWorkspace}\"",
                "--handlerName",
                "handler",
                "--skillEntryFile",
                "^\"\\${workspaceFolder}/lambda/index.js\"",
                "--region",
                "${1|NA,EU,FE|}"
              ],
              "cwd": "^\"\\${workspaceFolder}/lambda\""
            }
          }
        ]
      },
      {
        "type": "skillDebugger_python",
        "label": "ASK: Alexa Skills Debugger (Python)",
        "program": "./out/client/debugger/debugAdapter/main.js",
        "runtime": "node",
        "configurationSnippets": [
          {
            "label": "ASK: Alexa Skills Debugger (Python)",
            "description": "Debugger for Alexa Skills (Python)",
            "body": {
              "name": "Debug Alexa Skill (Python)",
              "type": "python",
              "request": "launch",
              "program": "^\"\\${command:ask.debugAdapterPath}\"",
              "pythonPath": "^\"\\${command:python.interpreterPath}\"",
              "args": [
                "--accessToken",
                "^\"\\${command:ask.accessToken}\"",
                "--skillId",
                "^\"\\${command:ask.skillIdFromWorkspace}\"",
                "--skillHandler",
                "lambda_handler",
                "--skillFilePath",
                "^\"\\${workspaceFolder}/lambda/lambda_function.py\"",
                "--region",
                "${1|NA,EU,FE|}"
              ],
              "console": "internalConsole",
              "cwd": "^\"\\${workspaceFolder}/lambda\""
            }
          }
        ]
      },
      {
        "type": "acdlDebugger",
        "label": "ACDL Debugger",
        "languages": [
          "acdl"
        ]
      }
    ],
    "languages": [
      {
        "id": "acdl",
        "aliases": [
          "ACDL",
          "acdl"
        ],
        "extensions": [
          ".acdl"
        ],
        "configuration": "./languages/acdl/language-configuration.json"
      }
    ],
    "grammars": [
      {
        "language": "acdl",
        "scopeName": "source.acdl",
        "path": "./languages/acdl/syntaxes/acdl.tmLanguage.json"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run compile && webpack --mode production",
    "webpack": "npm run compile && webpack --mode development",
    "webpack-dev": "webpack --mode development --watch",
    "lint": "eslint src",
    "test-compile": "tsc -p ./",
    "copyTestData": "cp -R ./test/mockSkill ./out/test && cp -R ./test/acdlServer/mockACDL ./out/test/acdlServer",
    "compile": "shx rm -rf ./out/ && shx rm -rf ./dist/ && tsc -p ./",
    "format": "prettier --write .",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run copyTestData",
    "test": "node ./out/test/runTest.js",
    "pre-release": "standard-version",
    "package": "vsce package --out $npm_config_out",
    "publish": "vsce publish --pat $npm_config_pat --packagePath $npm_config_packagePath"
  },
  "devDependencies": {
    "@commitlint/cli": "^11.0.0",
    "@commitlint/config-conventional": "^11.0.0",
    "@types/adm-zip": "^0.4.32",
    "@types/async-retry": "^1.4.1",
    "@types/folder-hash": "^3.3.0",
    "@types/fs-extra": "^8.1.0",
    "@types/glob": "^7.1.3",
    "@types/jsonfile": "^6.0.0",
    "@types/mocha": "^7.0.1",
    "@types/nock": "^10.0.3",
    "@types/node": "^12.12.30",
    "@types/portscanner": "^2.1.0",
    "@types/ramda": "^0.25.28",
    "@types/simple-oauth2": "^2.5.2",
    "@types/sinon": "^4.3.0",
    "@types/vscode": "^1.53.0",
    "@typescript-eslint/eslint-plugin": "^5.38.0",
    "@typescript-eslint/parser": "^5.38.0",
    "ask-smapi-model": "^1.14.0",
    "chai": "^4.2.0",
    "copy-webpack-plugin": "^9.0.0",
    "del": "^3.0.0",
    "eslint": "^8.23.1",
    "eslint-config-airbnb-base": "^15.0.0",
    "eslint-config-airbnb-typescript": "^17.0.0",
    "eslint-config-prettier": "^8.5.0",
    "glob": "^7.1.6",
    "gulp": "^4.0.2",
    "husky": "^4.3.0",
    "lint-staged": "^13.0.3",
    "mocha": "^10.1.0",
    "nock": "^9.6.1",
    "nyc": "^15.1.0",
    "prettier": "^2.4.0",
    "shx": "^0.3.2",
    "sinon": "^4.5.0",
    "standard-version": "^9.0.0",
    "ts-loader": "^9.3.1",
    "ts-node": "^10.9.1",
    "typescript": "4.7",
    "vsce": "^2.14.0",
    "vscode-test": "^1.3.0",
    "webpack": "^5.76.0",
    "webpack-cli": "^4.5.0"
  },
  "dependencies": {
    "@alexa/acdl": "*",
    "adm-zip": "0.4.14",
    "apl-suggester": "^2023.1.0",
    "apl-viewhost-web": "^2023.1.0-1",
    "ask-smapi-sdk": "^1.2.2",
    "async-retry": "^1.3.1",
    "axios": "^0.21.2",
    "bufferutil": "^4.0.1",
    "find-up": "^4.0.0",
    "folder-hash": "^4.0.0",
    "fs-extra": "9.0.0",
    "http-message-parser": "0.0.34",
    "https-proxy-agent": "^2.2.2",
    "immutable": ">4.0.0-rc",
    "jsdom": "^16.3.0",
    "json-source-map": "^0.4.0",
    "jsonfile": "^4.0.0",
    "lodash.debounce": "^4.0.8",
    "md5-file": "^5.0.0",
    "node-webvtt": "^1.9.3",
    "open": "^7.0.4",
    "original-fs": "^1.1.0",
    "pkg-dir": "^5.0.0",
    "portscanner": "^2.2.0",
    "ramda": "^0.25.0",
    "say": "^0.16.0",
    "simple-oauth2": "1.0.3",
    "sound-play": "^1.1.0",
    "typed-rest-client": "^1.8.4",
    "utf-8-validate": "^5.0.2",
    "uuid": "^3.4.0",
    "vscode-debugadapter": "^1.39.1",
    "vscode-languageclient": "^8.0.2",
    "vscode-languageserver": "^8.0.2",
    "vscode-languageserver-textdocument": "^1.0.7",
    "wavefile": "^11.0.0"
  },
  "husky": {
    "hooks": {
      "commit-msg": "commitlint -E HUSKY_GIT_PARAMS",
      "pre-commit": "lint-staged"
    }
  },
  "lint-staged": {
    "*.ts": [
      "eslint --fix",
      "prettier --write",
      "git add"
    ]
  },
  "__metadata": {
    "id": "022e2f4a-9c16-4602-a5f0-1c804f1b4181",
    "publisherDisplayName": "Amazon Alexa",
    "publisherId": "a8f2b8f6-a673-46c7-8542-7fb77081c2c0",
    "isPreReleaseVersion": false
  }
}
